<!-- <?xml version="1.0" encoding="UTF-8"?> <project xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
	http://maven.apache.org/xsd/maven-4.0.0.xsd"> -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.kt.3mp</groupId>
	<artifactId>api-template</artifactId>
	<packaging>war</packaging>
	<name>KT 3MP api template</name>
	<version>0.0.4</version>
	<url>http://maven.apache.org</url>

	<repositories>
		<repository>
			<id>iot_repoy</id>
			<name>iot_repo</name>
			<url>http://14.63.140.51/nexus/content/repositories/hbase-sdk/</url>
		</repository>
		<repository>
			<id>in-project</id>
			<name>custom jars</name>
			<url>file://${project.basedir}/libs</url>
		</repository>
		<repository>
			<id>iot_security</id>
			<name>iot_security</name>
			<url>http://14.63.140.51/nexus/content/repositories/iot_security/</url>
		</repository>
		<repository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>http://repo.spring.io/libs-release</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>http://repo.spring.io/libs-release</url>
		</pluginRepository>
	</pluginRepositories>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<jdk.version>1.8</jdk.version>
		<spring.version>4.3.23.RELEASE</spring.version>
		<mybatis.version>3.2.8</mybatis.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.test.skip>true</maven.test.skip>
		<spring-cloud.version>1.0.1.RELEASE</spring-cloud.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-eureka</artifactId> 
			</dependency> -->

		<!-- JAVAX -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<!-- JSP tag 위한 라이브러리 <dependency> <groupId>taglibs</groupId> <artifactId>standard</artifactId> 
			<version>1.1.2</version> <scope>compile</scope> </dependency> -->
		<!-- 임베디드 톰켓, JSP 사용 시 필요 <dependency> <groupId>org.apache.tomcat.embed</groupId> 
			<artifactId>tomcat-embed-jasper</artifactId> <scope>provided</scope> </dependency> -->

		<!-- Java Standard Tag Library,JSP 사용 시 <dependency> <groupId>javax.servlet</groupId> 
			<artifactId>jstl</artifactId> </dependency> -->
		<!-- REDIS -->
		<!-- <dependency> <groupId>redis.clients</groupId> <artifactId>jedis</artifactId> 
			</dependency> -->

		<!-- <dependency> <groupId>org.springframework.data</groupId> <artifactId>spring-data-redis</artifactId> 
			<exclusions> <exclusion> <groupId>tomcat</groupId> <artifactId>jasper-compiler</artifactId> 
			</exclusion> </exclusions> </dependency> -->

		<!-- MyBatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.2.2</version>
		</dependency>

		<!-- Apache Kafka -->
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka_2.10</artifactId>
			<version>0.8.2.0</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-log4j12</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- RabbitMQ -->
		<!-- <dependency> <groupId>org.springframework.amqp</groupId> <artifactId>spring-amqp</artifactId> 
			<version>${spring.amqp.version}</version> <exclusions> <exclusion> <groupId>com.sun.jmx</groupId> 
			<artifactId>jmxri</artifactId> </exclusion> </exclusions> </dependency> <dependency> 
			<groupId>org.springframework.amqp</groupId> <artifactId>spring-rabbit</artifactId> 
			<version>${spring.amqp.version}</version> </dependency> -->
		<!-- Camel -->
		<!-- <dependency> <groupId>org.apache.camel</groupId> <artifactId>camel-core</artifactId> 
			<version>2.14.1</version> </dependency> <dependency> <groupId>org.apache.camel</groupId> 
			<artifactId>camel-spring</artifactId> <version>2.14.1</version> </dependency> 
			<dependency> <groupId>org.apache.camel</groupId> <artifactId>camel-spring-javaconfig</artifactId> 
			<version>2.14.1</version> </dependency> -->
		<!-- Postgresql JDBC 41 -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.4-1200-jdbc41</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-simple</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- DBCP2 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
		</dependency>

		<!-- CORS Filter -->
		<dependency>
			<groupId>com.thetransactioncompany</groupId>
			<artifactId>cors-filter</artifactId>
			<version>2.3</version>
		</dependency>

		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Common Lang java Lang API에 추가 기능 제공 -->
		<!-- <dependency> <groupId>commons-lang</groupId> <artifactId>commons-lang</artifactId> 
			<version>2.6</version> </dependency> -->
		<!-- commons-lang의 개선 버전 http://commons.apache.org/proper/commons-lang/article3_0.html -->
		<!-- <dependency> <groupId>org.apache.commons</groupId> <artifactId>commons-lang3</artifactId> 
			<version>3.3.2</version> </dependency> -->
		<!-- HBASE TEMP -->
		<!-- <dependency> <groupId>org.apache.avro</groupId> <artifactId>avro</artifactId> 
			<version>1.7.7</version> </dependency> -->
			
		<!-- 	HBASE TEMP, kafka message version 3 -->
	 <dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro</artifactId>
			<version>1.7.7</version>
		</dependency>
		<!-- joda-time, no hbase SDK , JDK 의 Calendar와 Date 를 대체하는 library. -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.8.1</version>
		</dependency>

		<!-- jwt 토큰 파싱 -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-jwt</artifactId>
			<version>1.0.3.RELEASE</version>
		</dependency>

		<!-- JSON -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.2</version>
		</dependency>

		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>
		<!-- ETC -->

		<!-- 사용함 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>

		<!-- <dependency> <groupId>org.apache.commons</groupId> <artifactId>commons-collections4</artifactId> 
			<version>4.0</version> </dependency> <dependency> <groupId>commons-httpclient</groupId> 
			<artifactId>commons-httpclient</artifactId> <version>3.1</version> </dependency> -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.2.2</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.2.2</version>
		</dependency>

		<!--@Inject, @Named <dependency> <groupId>javax.inject</groupId> <artifactId>javax.inject</artifactId> 
			<version>1</version> </dependency> -->

		<!-- <dependency> <groupId>security</groupId> <artifactId>com.iot.security</artifactId> 
			<version>1.3.9</version> </dependency> -->

		<dependency>
			<groupId>com.googlecode.log4jdbc</groupId>
			<artifactId>log4jdbc</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- <dependency> <groupId>org.testng</groupId> <artifactId>testng</artifactId> 
			<version>6.8.8</version> </dependency> <dependency> <groupId>org.neo4j</groupId> 
			<artifactId>neo4j-kernel</artifactId> <version>2.1.5</version> </dependency> 
			<dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-batch</artifactId> 
			</dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-jta-bitronix</artifactId> 
			</dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId> 
			spring-boot-starter-cloud-connectors </artifactId> </dependency> -->
		<!-- Hibernate -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.16</version>
			<scope>provided</scope>
		</dependency>
		<!-- Common Lang java Lang API에 추가 기능 제공-->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		
		
	</dependencies>

	<build>
		<!-- <defaultGoal>install</defaultGoal> <directory>${basedir}/target</directory> 
			<finalName>${artifactId}-${version}</finalName> -->
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.properties</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/*.properties</exclude>
				</excludes>
				<filtering>false</filtering>
			</resource>
		</resources>
		<plugins>
			<!-- Support our own plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>${start-class}</mainClass>
				</configuration>
			</plugin>
			<!-- <requiresUnpack> <dependency> <groupId>com.netflix.eureka</groupId> 
				<artifactId>eureka-core</artifactId> </dependency> <dependency> <groupId>com.netflix.eureka</groupId> 
				<artifactId>eureka-client</artifactId> </dependency> </requiresUnpack> -->
			<!-- </configuration> -->

			<!-- <plugin> <artifactId>maven-compiler-plugin</artifactId> <version>3.1</version> 
				<configuration> <source>${jdk.version}</source> <target>${jdk.version}</target> 
				</configuration> </plugin> -->

			<!-- <plugin> <groupId>com.spotify</groupId> <artifactId>docker-maven-plugin</artifactId> 
				<version>0.2.6</version> <configuration> <imageName>${docker.image.prefix}/${docker.image.name}</imageName> 
				<dockerDirectory>src/main/docker</dockerDirectory> <resources> <resource> 
				<targetPath>/</targetPath> <directory>${project.build.directory}</directory> 
				<include>${project.build.finalName}.war</include> </resource> </resources> 
				</configuration> </plugin> -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-pmd-plugin</artifactId> 
				<version>3.4</version> <configuration> <sourceEncoding>utf-8</sourceEncoding> 
				<minimumTokens>10</minimumTokens> <targetJdk>1.7</targetJdk> <rulesets> <ruleset>/rulesets/ktds_PMD_RuleSet_v1.1.xml</ruleset> 
				</rulesets> </configuration> </plugin> -->
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<!-- <dependency> <groupId>3MP-HbaseClient</groupId> <artifactId>3MP-HbaseClient</artifactId> 
				<version>0.0.9</version> </dependency> -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>1.5.20.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-parent</artifactId> 
				<version>${spring-cloud.version}</version> <type>pom</type> <scope>import</scope> 
				</dependency> -->
		</dependencies>
	</dependencyManagement>
</project>
